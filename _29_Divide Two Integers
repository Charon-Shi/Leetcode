class Solution {
public:
    int divide(int dividend, int divisor)
    {
    	if(divisor == 0) return 2147483647;
    	if(dividend == divisor) return 1;
    	if(dividend == 0) return 0;

    	unsigned int result = 0, n = 1, ori_divisor = abs(divisor), absDiv, absDvd;
    	int isPositive = 1;

    	if(dividend < 0) isPositive *= -1;
    	if(divisor < 0) isPositive *= -1;

    	absDiv = ori_divisor;
    	absDvd = abs(dividend);
    	while(absDvd >= absDiv)
    	{
    		result += n;
    		absDvd -= absDiv;
    		if(absDvd >= absDiv + absDiv)
    		{
    			absDiv = absDiv << 1;
    			n = n << 1;
    		}
    		else
    		{
    			absDiv = ori_divisor;
    			n = 1;
    		}

    	}

    	if(result == 2147483648 && isPositive == true)
    		return 2147483647;

    	return isPositive*result;
    }
};
