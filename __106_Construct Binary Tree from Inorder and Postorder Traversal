/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* Build(vector<int>& inorder, unsigned long begin, unsigned long end, vector<int>& postorder, unsigned long _begin, unsigned long _end) {
        unsigned long root = 0;
        TreeNode * _root;
        
        for (unsigned long i = begin; i <= end; i++)
            if (inorder[i] == postorder[_end])  { root = i; break; }
        
        _root = new struct TreeNode(postorder[_end]);
        if (root > begin)
            _root->left = Build(inorder, begin, root-1, postorder, _begin, _begin+root-1-begin);
        
        if (root < end)
            _root->right = Build(inorder, root+1, end, postorder, _begin+root-begin, _end-1);
        
        return _root;
    }
    
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        if (inorder.empty() && postorder.empty())    return NULL;
        else return Build(inorder, 0, inorder.size()-1, postorder, 0, postorder.size()-1);
    }
};
