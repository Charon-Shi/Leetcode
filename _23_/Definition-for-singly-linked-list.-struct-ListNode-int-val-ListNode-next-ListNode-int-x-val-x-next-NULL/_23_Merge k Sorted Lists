/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

class Solution {
public:
struct cmp
{
    bool operator ()(const ListNode *a, const ListNode *b)
    {
            return a->val > b->val;
    }
};
    ListNode *mergeKLists(vector<ListNode *> &lists)
    {
    	if(lists.size() == 0) return NULL;

    	priority_queue<ListNode*, vector<ListNode*>, cmp> que;

    	for(unsigned int i = 0; i < lists.size(); i++)
    		if(lists[i])	que.push(lists[i]);

    	ListNode *head = new ListNode(0), *temp = head, *top;
    	while(!que.empty())
    	{
    		top = que.top();
    		que.pop();
    		temp->next = top;
    		temp = top;
    		if(top->next != NULL)	que.push(top->next);
    	}

    	temp = head;
    	head = head->next;
    	free(temp);

    	return head;
    }
};
