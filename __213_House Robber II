class Solution {
public:
    int rob(vector<int>& nums) {
        if(!nums.size())
            return 0;
            
        if(nums.size() == 1)
            return nums[0];
        if(nums.size() == 2)
            return max(nums[0], nums[1]);
        if(nums.size() == 3)
            return max(nums[0], max(nums[1], nums[2]));
            
        vector<int> dp1(nums.size(), 0), dp2(nums.size(), 0);
        int len = nums.size();
        
        dp1[1] = nums[1];
        dp1[2] = max(nums[1], nums[2]);
            
        for(int i = 3; i < len; i++) 
            dp1[i] = max(dp1[i-1], dp1[i-2] + nums[i]);
        
        dp2[0] = nums[0];
        dp2[1] = max(nums[0], nums[1]);
            
        for(int i = 2; i < len-1; i++) {
            dp2[i] = max(dp2[i-1], dp2[i-2] + nums[i]);
        }
        
        return max(dp1[len-1], dp2[len-2]);
    }
};
